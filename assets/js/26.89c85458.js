(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{439:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("作者：绯影")])]),t._v(" "),a("p",[t._v("参考："),a("a",{attrs:{href:"https://juejin.cn/post/6850418120436711432#heading-3",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.cn/post/6850418120436711432#heading-3"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('-   [hash] is a "unique hash generated for every build"\n-   [chunkhash] is "based on each chunks\' content"\n-   [contenthash] is "generated for extracted content"\n')])])]),a("h3",{attrs:{id:"_1-hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-hash"}},[t._v("#")]),t._v(" 1. hash")]),t._v(" "),a("p",[a("code",[t._v('filename: "[name].[hash].js"')]),a("br"),t._v(" "),a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2512738a69af4e37ad35e7b933d30433~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),a("br"),t._v("\nhash：每次构建的生成唯一的一个 hash，且所有的文件 hash 串是一样的")]),t._v(" "),a("p",[t._v("修改某个文件的内容后，所有生成文件的 hash 值都会发生变化\n"),a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7d3e46424c9f45a9bbfb24a43279394f~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"_2-chunkhash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-chunkhash"}},[t._v("#")]),t._v(" 2. chunkhash")]),t._v(" "),a("p",[a("code",[t._v('filename: "[name].[chunkhash].js')]),a("br"),t._v(" "),a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0ba9cd42c52147c9a2d1c906ee5c0767~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),a("br"),t._v("\n每一个文件最后的 hash 根据它引入的 chunk 决定")]),t._v(" "),a("p",[t._v("修改 index 引入文件中某个文件的内容后"),a("br"),t._v(" "),a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/95071f6323b8421d806ef0c1b5bab9e1~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),a("p",[t._v("修改 index 的引入文件后"),a("br"),t._v(" "),a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/67ac6e80ee8b4783a30caf3c9ea2ca83~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}}),a("br"),t._v("\n如果 detail 的 id 也发生变化，那么就是 module identifier 的原因，因为 index 新引入的模块改变了以后所有模块的 id 值，所以 detail 文件中引入的模块 id 值发生了改变"),a("br"),t._v("\n解决方法："),a("code",[t._v("new webpack.HashedModuleIdsPlugin()")])]),t._v(" "),a("p",[a("strong",[t._v("chunkhash 存在的问题")]),a("br"),t._v("\n有 css 的情况下，每个 entry file 会打包出来一个 js 文件和 css 文件，在使用 chunkhash 的情况下，js 和 css 的文件的 hash 会是一样的，这个时候暴露出来的一个问题：你修改一个 react 的 bug，但是并没有改样式，最后更新后，js 和 css 的文件的 hash 都变了。这个还是不太好，css 文件的 hash 串不变最好，再继续升级！")]),t._v(" "),a("h3",{attrs:{id:"_3-contenthash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-contenthash"}},[t._v("#")]),t._v(" 3. contenthash")]),t._v(" "),a("p",[t._v("使用 mini-css-extract-plugin 的时候进行配置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MiniCssExtractPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Options similar to the same options in webpackOptions.output")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// both options are optional")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name].[contenthash:8].css'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("chunkFilename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name].[contenthash:8].chunk.css'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("可以解决 chunkhash 的问题，保证 js 修改的时候，css 的打包文件不变；css 修改的时候，js 的打包文件不变")])])}),[],!1,null,null,null);a.default=n.exports}}]);